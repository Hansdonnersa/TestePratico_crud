//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestePratico_crud.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class testepraticoEntities2 : DbContext
    {
        public testepraticoEntities2()
            : base("name=testepraticoEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Endereco> Endereco { get; set; }
        public virtual DbSet<Loja> Loja { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual int AlerarEndereco(Nullable<int> id, Nullable<int> idCliente, string logradouro, string numero, string complemento, string cidade, string uf, string cEP)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var logradouroParameter = logradouro != null ?
                new ObjectParameter("logradouro", logradouro) :
                new ObjectParameter("logradouro", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var complementoParameter = complemento != null ?
                new ObjectParameter("complemento", complemento) :
                new ObjectParameter("complemento", typeof(string));
    
            var cidadeParameter = cidade != null ?
                new ObjectParameter("cidade", cidade) :
                new ObjectParameter("cidade", typeof(string));
    
            var ufParameter = uf != null ?
                new ObjectParameter("Uf", uf) :
                new ObjectParameter("Uf", typeof(string));
    
            var cEPParameter = cEP != null ?
                new ObjectParameter("CEP", cEP) :
                new ObjectParameter("CEP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlerarEndereco", idParameter, idClienteParameter, logradouroParameter, numeroParameter, complementoParameter, cidadeParameter, ufParameter, cEPParameter);
        }
    
        public virtual int alterarCliente(Nullable<int> id, string nome, string cPF, string rG, Nullable<System.DateTime> dataNascimento, Nullable<bool> ativo)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var cPFParameter = cPF != null ?
                new ObjectParameter("CPF", cPF) :
                new ObjectParameter("CPF", typeof(string));
    
            var rGParameter = rG != null ?
                new ObjectParameter("RG", rG) :
                new ObjectParameter("RG", typeof(string));
    
            var dataNascimentoParameter = dataNascimento.HasValue ?
                new ObjectParameter("DataNascimento", dataNascimento) :
                new ObjectParameter("DataNascimento", typeof(System.DateTime));
    
            var ativoParameter = ativo.HasValue ?
                new ObjectParameter("Ativo", ativo) :
                new ObjectParameter("Ativo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("alterarCliente", idParameter, nomeParameter, cPFParameter, rGParameter, dataNascimentoParameter, ativoParameter);
        }
    
        public virtual int ApagarCliente(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ApagarCliente", idParameter);
        }
    
        public virtual int ApagarEndereco(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ApagarEndereco", idParameter);
        }
    
        public virtual int inserirCliente(string nome, string cPF, string rG, Nullable<System.DateTime> dataNascimento, Nullable<bool> ativo)
        {
            var nomeParameter = nome != null ?
                new ObjectParameter("nome", nome) :
                new ObjectParameter("nome", typeof(string));
    
            var cPFParameter = cPF != null ?
                new ObjectParameter("CPF", cPF) :
                new ObjectParameter("CPF", typeof(string));
    
            var rGParameter = rG != null ?
                new ObjectParameter("RG", rG) :
                new ObjectParameter("RG", typeof(string));
    
            var dataNascimentoParameter = dataNascimento.HasValue ?
                new ObjectParameter("DataNascimento", dataNascimento) :
                new ObjectParameter("DataNascimento", typeof(System.DateTime));
    
            var ativoParameter = ativo.HasValue ?
                new ObjectParameter("Ativo", ativo) :
                new ObjectParameter("Ativo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inserirCliente", nomeParameter, cPFParameter, rGParameter, dataNascimentoParameter, ativoParameter);
        }
    
        public virtual int inserirEndereco(Nullable<int> idCliente, string logradouro, string numero, string complemento, string cidade, string uf, string cEP)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("idCliente", idCliente) :
                new ObjectParameter("idCliente", typeof(int));
    
            var logradouroParameter = logradouro != null ?
                new ObjectParameter("logradouro", logradouro) :
                new ObjectParameter("logradouro", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var complementoParameter = complemento != null ?
                new ObjectParameter("complemento", complemento) :
                new ObjectParameter("complemento", typeof(string));
    
            var cidadeParameter = cidade != null ?
                new ObjectParameter("cidade", cidade) :
                new ObjectParameter("cidade", typeof(string));
    
            var ufParameter = uf != null ?
                new ObjectParameter("Uf", uf) :
                new ObjectParameter("Uf", typeof(string));
    
            var cEPParameter = cEP != null ?
                new ObjectParameter("CEP", cEP) :
                new ObjectParameter("CEP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("inserirEndereco", idClienteParameter, logradouroParameter, numeroParameter, complementoParameter, cidadeParameter, ufParameter, cEPParameter);
        }
    
        public virtual ObjectResult<listarClientes_Result> listarClientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listarClientes_Result>("listarClientes");
        }
    
        public virtual ObjectResult<listarendereco_Result> listarendereco()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listarendereco_Result>("listarendereco");
        }
    
        public virtual ObjectResult<listarLojas_Result> listarLojas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listarLojas_Result>("listarLojas");
        }
    
        public virtual ObjectResult<selecionarCliente_Result> selecionarCliente(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selecionarCliente_Result>("selecionarCliente", idParameter);
        }
    
        public virtual ObjectResult<selecionarClienteAtivo_Result> selecionarClienteAtivo(Nullable<bool> ativo)
        {
            var ativoParameter = ativo.HasValue ?
                new ObjectParameter("Ativo", ativo) :
                new ObjectParameter("Ativo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selecionarClienteAtivo_Result>("selecionarClienteAtivo", ativoParameter);
        }
    
        public virtual ObjectResult<selecionarEndereco_Result> selecionarEndereco(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selecionarEndereco_Result>("selecionarEndereco", idParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
